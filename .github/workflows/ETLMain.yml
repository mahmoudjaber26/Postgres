name: On-prem ETL (Google Sheets → Postgres)

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "*/10 * * * *"   # every 10 minutes
  workflow_dispatch: {}

jobs:
  run-etl:
    runs-on: self-hosted
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Optional: quick Python-level connection test (works on Windows & Linux)
      - name: Sanity check DB connectivity
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGPORT: ${{ secrets.POSTGRES_PORT }}
          PGDATABASE: ${{ secrets.PGDATABASEY }}
          PGUSER: ${{ secrets.PGUSERY }}
          PGPASSWORD: ${{ secrets.PGPASSWORDY }}
          PGSSLMODE: ${{ secrets.PGSSLMODE }}
        run: |
          python - << 'PY'
          import os, psycopg2
          cfg = dict(
            host=os.getenv("POSTGRES_HOST"),
            port=os.getenv("POSTGRES_PORT","5432"),
            dbname=os.getenv("PGDATABASEY"),
            user=os.getenv("PGUSERY"),
            password=os.getenv("PGPASSWORDY"),
            sslmode=os.getenv("PGSSLMODE","disable")
          )
          try:
              conn = psycopg2.connect(**cfg); conn.close()
              print("✅ DB reachable")
          except Exception as e:
              print("❌ DB not reachable:", e); raise
          PY

      - name: Run ETL
        env:
          PGHOST: ${{ secrets.POSTGRRES_HOST }}
          PGPORT: ${{ secrets.POSTGRES_PORT }}
          PGDATABASE: ${{ secrets.PGDATABASEY }}
          PGUSER: ${{ secrets.PGUSERY }}
          PGPASSWORD: ${{ secrets.PGPASSWORDY }}
          PGSSLMODE: ${{ secrets.PGSSLMODE }}
          GSERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_CRED }}
        run: |
          python read_gsheet.py
